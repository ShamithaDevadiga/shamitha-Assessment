def convert_to_minutes(time):
    hours = int(time[:2])
    minutes = int(time[2:])
    return hours * 60 + minutes

def convert_to_time(minutes):
    hours = minutes // 60
    minutes = minutes % 60
    return f"{str(hours).zfill(2)}{str(minutes).zfill(2)}"

def select_jobs(jobs, n):
    start_times = [convert_to_minutes(job[0]) for job in jobs]
    end_times = [convert_to_minutes(job[1]) for job in jobs]
    profits = [job[2] for job in jobs]
    
    dp = [0 for _ in range(24 * 60 + 1)]
    
    for i in range(n):
        for j in range(end_times[i]-1, -1, -1):
            if j >= start_times[i]:
                dp[j] = max(dp[j], dp[end_times[i]] + profits[i])
    
    max_earnings = dp[0]
    
    selected_jobs = []
    j = 0
    for i in range(24 * 60 + 1):
        if dp[i] == max_earnings:
            selected_jobs.append((convert_to_time(j), convert_to_time(i), max_earnings))
            max_earnings -= profits[i]
            j = end_times[i]
    
    remaining_jobs = [(convert_to_time(start_times[i]), convert_to_time(end_times[i]), profits[i]) for i in range(n) if (convert_to_time(start_times[i]), convert_to_time(end_times[i]), profits[i]) not in selected_jobs]
    remaining_earnings = sum([profit for _, _, profit in remaining_jobs])
    
    return len(remaining_jobs), remaining_earnings

n = int(input("Enter the number of Jobs: "))
jobs = []
for i in range(n):
    start_time = input("Enter job start time: ")
    end_time = input("Enter job end time: ")
    profit = int(input("Enter job profit: "))
    jobs.append((start_time, end_time, profit))

result = select_jobs(jobs, n)
print("The number of tasks and earnings available for others")
print("Task:", result[0])
print("Earnings:", result[1])